{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getEmployees() {\n    return this.http.get(`${this.apiServerUrl}/employee/all`);\n  }\n  addEmployees(employee) {\n    return this.http.post(`${this.apiServerUrl}/employee/add`, employee);\n  }\n  updateEmployees(employee) {\n    return this.http.put(`${this.apiServerUrl}/employee/update`, employee);\n  }\n  deleteEmployees(employeeId) {\n    return this.http.delete(`${this.apiServerUrl}/employee/delete/${employeeId}`);\n  }\n  static #_ = this.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","EmployeeService","constructor","http","apiServerUrl","apiBaseUrl","getEmployees","get","addEmployees","employee","post","updateEmployees","put","deleteEmployees","employeeId","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\E-Krishak\\employeeManager_CRUD\\frontEnd\\employeemanagerapp\\src\\app\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Employee } from './employee';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n  updateEmployee: any;\r\n  deleteEmployee: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getEmployees(): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>(`${this.apiServerUrl}/employee/all`);\r\n  }\r\n  public addEmployees(employee: Employee): Observable<Employee> {\r\n    return this.http.post<Employee>(`${this.apiServerUrl}/employee/add`, employee);\r\n  }\r\n  public updateEmployees(employee: Employee): Observable<Employee> {\r\n    return this.http.put<Employee>(`${this.apiServerUrl}/employee/update`, employee);\r\n  }\r\n  public deleteEmployees(employeeId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiServerUrl}/employee/delete/${employeeId}`);\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,UAAU;EAGL;EAEjCC,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,YAAY,eAAe,CAAC;EACvE;EACOI,YAAYA,CAACC,QAAkB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAW,GAAG,IAAI,CAACN,YAAY,eAAe,EAAEK,QAAQ,CAAC;EAChF;EACOE,eAAeA,CAACF,QAAkB;IACvC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAW,GAAG,IAAI,CAACR,YAAY,kBAAkB,EAAEK,QAAQ,CAAC;EAClF;EACOI,eAAeA,CAACC,UAAkB;IACvC,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,YAAY,oBAAoBU,UAAU,EAAE,CAAC;EACrF;EAAC,QAAAE,CAAA,G;qBAjBUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}